# Generated by Django 5.2.4 on 2025-07-07 18:06

from django.db import migrations

def migrate_category_data(apps, schema_editor):
    Category = apps.get_model('products', 'Category')
    Product = apps.get_model('products', 'Product')

    # Create categories if they don't exist
    category_map = {}
    for cat_key, cat_name in [('clothes', 'Clothes'), ('shoes', 'Shoes'), ('bags', 'Bags')]:
        category_obj, created = Category.objects.get_or_create(name=cat_name)
        category_map[cat_key] = category_obj

    # Update products to use ForeignKey
    for product in Product.objects.all():
        cat_obj = None
        if product.category in category_map:
            cat_obj = category_map[product.category]
        if cat_obj:
            product.category = cat_obj
            product.save()

def reverse_migrate_category_data(apps, schema_editor):
    # Optional: revert to string values if needed
    Category = apps.get_model('products', 'Category')
    Product = apps.get_model('products', 'Product')
    name_to_key = {'Clothes': 'clothes', 'Shoes': 'shoes', 'Bags': 'bags'}
    for product in Product.objects.all():
        if product.category:
            product.category = name_to_key.get(product.category.name, '')
            product.save()

class Migration(migrations.Migration):

    dependencies = [
        ('products', '0002_alter_product_category'),
    ]

    operations = [
        migrations.RunPython(migrate_category_data, reverse_migrate_category_data),
    ]
